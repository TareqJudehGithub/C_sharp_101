while loop 
    - Whenever the condition is true, keep on repeating it.
    - A while loop will repeat checking the condition and executing those statements
      until a condition (boolean expression) is no longer true.
    - The while loop tests the condition before executing the code following the while.
    - Make sure that the while loop condition does switch to false as you execute 
    the code. Otherwise, you create an infinite loop where your program never ends. 
        int counter = 10;

        while (counter > 0)
        {
            Console.WriteLine(counter);
            counter--;
            if (counter == 0)
            {
                Console.WriteLine("GO!\n");
            }
        }

 for loop
 - for loop, iterates for a number of times we already know, unlike while-loops.
 - The first part is the for initializer: int counter = 0; 
   The initializer declares that counter is the loop variable, and sets its initial value.
 - The middle part is the for condition. 
   Counter < 10 declares that this for loop continues to execute as long as the value of 
   counter is less than 10.
 - The final part is the for iterator: counter++ specifies how to modify the loop 
   variable after executing the block following the for statement. Here, it specifies 
   that counter should be incremented by 1 each time the block executes.
    for(int counter = 0; counter < 10; counter++)
    {
      Console.WriteLine($"Hello World! The counter is {counter}");
    }
      string greet = "hello";
      Console.WriteLine("for - loop");
      for (int i = 0; i <= greet.Length; i++)
      {
          Console.WriteLine($"{i} is still less than {greet.Length}");
          if (i == greet.Length)
          {
              Console.WriteLine($"{i} equals {greet.Length}");
          }
      }


  do while loop
    - in do-while loop, do block is first executed, then the condition is checked
      in the while block.
    - do while loop keeps iterating until a certain condition is no longer true.
    - The do block of code executes first, then it checks the condition and executes
      it in the while block of code.  

  
break and continue

 - break
  - break statement stops (terminates) the current loop.

 - continue
  - continue skips the current iteration and jumps to the next one.
  



