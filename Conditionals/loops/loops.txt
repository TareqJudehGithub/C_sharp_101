while loop 
    - Whenever the condition is true, keep on repeating it.
    - while-loop will repeat checking the condition and executing those statements until 
    - The while-loop tests the condition before executing the code following the while. 
      the condition is false.
        int counter = 10;

        while (counter > 0)
        {
            Console.WriteLine(counter);
            counter--;
            if (counter == 0)
            {
                Console.WriteLine("GO!\n");
            }
        }

 for loop
 - for loop, iterates for a number of times we already know, unlike while-loops.
 - The first part is the for initializer: int counter = 0; declares that counter is the 
   loop variable, and sets its initial value to 0.
 - The middle part is the for condition: counter < 10 declares that this for loop 
   continues to execute as long as the value of counter is less than 10.
 - The final part is the for iterator: counter++ specifies how to modify the loop 
   variable after executing the block following the for statement. Here, it specifies 
   that counter should be incremented by 1 each time the block executes.
    for(int counter = 0; counter < 10; counter++)
    {
      Console.WriteLine($"Hello World! The counter is {counter}");
    }
      string greet = "hello";
      Console.WriteLine("for - loop");
      for (int i = 0; i <= greet.Length; i++)
      {
          Console.WriteLine($"{i} is still less than {greet.Length}");
          if (i == greet.Length)
          {
              Console.WriteLine($"{i} equals {greet.Length}");
          }
      }