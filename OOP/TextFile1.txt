OOP in C#
 - OOP is way to write organized code by creating types in the form of classes. 
 - OOP can groups all information.
 - OOP saves time and decreases development cost.
 - 

 Class
  - A class is blue print of an object.
  - A class has actions or abilities. like functions and methods.
  - A class has properties. Like member variables. e.g. string properties.
  - Inheritance is possible in classes.
  - Classes can be used as data type.
  - {get;} Meaning this is a property and it is only get-able.
  
  - Members:
    A class can contain properties and methods, and these are called Members
    of that class.

Objects
 - We can create objects out of a class.
 - 
 
 Example of classes and object:
	We can create a 'car' class, and from that car class, we could create new objects.
	Properties like: HP, Wheels, Doors..etc.
	Abilities like: drive, break, open window, light on/off.
	inheritance: A5 < Audi < Car.


- Access modifiers
 - Access modifiers like (public or private) determines if members of a class
   can be accessed by other classes or applications.
   - public means these members have access to other classes and applications.
   - private means these members have access within their class only.

- Constructor
 - A constructor is a member that has the same name as the class. 
 - It's used to initialize objects of that class type. 
 - 
